package com.rain.servlet;

import java.io.IOException;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.rain.dao.AdminDao;

/**
 * Servlet实现类updateAdminServlet，用于处理更新管理员信息的请求。
 * 这段代码是一个Servlet，它的作用是处理更新管理员信息的请求。
 * 它通过AdminDao类与数据库进行交互，根据提交的管理员信息执行更新操作，
 * 并将用户重定向到管理员列表页面。
 * 这个Servlet主要处理POST请求，GET请求将不会被处理。
 * 
 */
@WebServlet("/updateAdminServlet")
public class updateAdminServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

	/**
	 * 默认构造函数。
	 */
	public updateAdminServlet() {
		super();
		// 构造函数中暂无代码，仅为了满足Servlet规范。
	}

	/**
	 * 处理GET请求的方法。
	 * 由于本Servlet主要处理POST请求，GET请求的处理方法为空。
	 * 
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		// 暂无实现，GET请求不被处理。
	}

	/**
	 * 处理POST请求的方法。
	 * 从请求中获取更新管理员信息的数据，并调用AdminDao的updateAdmin方法更新管理员信息。
	 * 
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		// 设置请求和响应的编码类型为UTF-8，以支持国际化字符。
		request.setCharacterEncoding("UTF-8");
		response.setContentType("text/html;charset=UTF-8");

		// 从请求中获取管理员信息更新所需的参数。
		String username = request.getParameter("username"); // 获取用户名
		String password = request.getParameter("password"); // 获取密码
		String name = request.getParameter("name"); // 获取姓名
		String email = request.getParameter("email"); // 获取电子邮件
		String phone = request.getParameter("phone"); // 获取电话
		int aid = Integer.parseInt(request.getParameter("aid")); // 获取管理员ID

		// 创建AdminDao实例，用于数据库操作。
		AdminDao userdao = new AdminDao();

		// 调用AdminDao的updateAdmin方法，根据管理员ID更新管理员信息。
		userdao.updateAdmin(aid, username, password, name, email, phone);

		// 更新管理员信息后，重定向到管理员列表页面。
		response.sendRedirect("/books/admin_admin.jsp");
	}
}